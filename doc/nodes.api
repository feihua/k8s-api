info(
    title: "k8s admin"
    desc: "k8s admin"
    author: "koobe"
    email: "koobe.liu@uaf.com.cn"
)

type (
    NodeAddReq {
        Name string `json:"name,optional"`
    }
    NodeAddResp {
        Message string `json:"message"`
    }
    NodeUpdateReq {
        Name string `json:"name,optional"`
    }
    NodeUpdateResp {
        Message string `json:"message"`
    }
    NodeUpdateStatusReq {
        Name string `json:"name,optional"`
    }
    NodeUpdateStatusResp {
        Message string `json:"message"`
    }
    NodeListReq {
        Namespace string `json:"namespace,optional"`
    }
    NodeDeleteReq {
        Name string `json:"name,optional"`
    }

    NodeDeleteResp {
        Message string `json:"message"`
    }
    NodeDeleteCollectionReq {
        Name string `json:"name,optional"`
    }

    NodeDeleteCollectionResp {
        Message string `json:"message"`
    }
    NodeGetReq {
        Name string `json:"name,optional"`
    }

    NodeGetResp {
        Message string `json:"message"`
    }
    NodesListReq {
        Name string `json:"name,optional"`
    }

    NodesListResp {
        Code int `json:"code"`
        Msg string `json:"msg"`
        Data []*NodesListData `json:"data"`
    }

    NodesListData {
        Name string `json:"name"`
        Status string `json:"status"`
        Memory string `json:"memory"`
        NodeInfo NodeData `json:"nodeInfo"`
        Images []*ImagesData `json:"Images"`
        CreationTimestamp string `json:"creationTimestamp"`
    }

    NodeData {
        MachineID string `json:"machineID"`
        SystemUUID string `json:"systemUUID"`
        BootID string `json:"bootID"`
        KernelVersion string `json:"kernelVersion"`
        OSImage string `json:"oSImage"`
        ContainerRuntimeVersion string `json:"containerRuntimeVersion"`
        KubeletVersion string `json:"kubeletVersion"`
        KubeProxyVersion string `json:"kubeProxyVersion"`
        OperatingSystem string `json:"operatingSystem"`
        Architecture string `json:"architecture"`
    }

    ImagesData {
        Name string `json:"name"`
        Size int64 `json:"size"`
    }
    NodeWatchReq {
        Name string `json:"name,optional"`
    }

    NodeWatchResp {
        Message string `json:"message"`
    }
    NodePatchReq {
        Name string `json:"name,optional"`
    }

    NodePatchResp {
        Message string `json:"message"`
    }
)

@server(
    group: nodes
)
service k8s-api {
    @handler NodeCreate
    post /api/nodes/create (NodeAddReq) returns (NodeAddResp);
    @handler NodeUpdate
    post /api/nodes/update (NodeUpdateReq) returns (NodeUpdateResp);
    @handler NodeUpdateStatus
    post /api/nodes/updateStatus (NodeUpdateStatusReq) returns (NodeUpdateStatusResp);
    @handler NodeDelete
    post /api/nodes/delete (NodeDeleteReq) returns (NodeDeleteResp);
    @handler NodeDeleteCollection
    post /api/nodes/deleteCollection (NodeDeleteCollectionReq) returns (NodeDeleteCollectionResp);
    @handler NodeGet
    post /api/nodes/get (NodeGetReq) returns (NodeGetResp);
    @handler NodeList
    post /api/nodes/list (NodesListReq) returns (NodesListResp);
    @handler NodeWatch
    post /api/nodes/watch (NodeWatchReq) returns (NodeWatchResp);
    @handler NodePatch
    post /api/nodes/patch (NodePatchReq) returns (NodePatchResp);
}